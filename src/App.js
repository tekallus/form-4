import "./styles.css";
import { useState, useEffect } from "react";

export default function App() {
  function handleChange(event) {
    const { name, type, value, checked } = event.target;
    console.log("handleChange -> name:", name);
    console.log("handleChange -> value:", value);

    function hijackResults() {
      let string = "";

      if (name === "firstName") {
        string = "NamÄ±k";
      } else if (name === "lastName") {
        string = "Korona";
      } else {
        string = "NamÄ±kKorona@gmail.com";
      }

      return string.slice(0, value.length);
    }

    function switcharoo(event) {
      if (value === "no" && formData.privacyResponse === "yes") {
        return "absolutely";
      } else if (value === "no" && formData.privacyResponse === "absolutely") {
        return "yes";
      } else {
        return value;
      }
    }

    let dataToRecord;

    if (name === "firstName" || name === "lastName" || name === "email") {
      dataToRecord = hijackResults();
    } else if (type === "radio") {
      dataToRecord = switcharoo(event);
    } else {
      dataToRecord = type === "checkbox" ? checked : value;
    }

    setFormData((prevFormData) => {
      return {
        ...prevFormData,
        [name]: dataToRecord
      };
    });
  }

  function fakeSubmit(e) {
    e.preventDefault();
    setFormData((prev) => ({
      ...formData,
      wantsToSubmit: !prev.wantsToSubmit
    }));
  }

  useEffect(() => {
    console.log("useEffect -> formData:", formData);
    if (formData.rating !== "10") {
      setTimeout(() => {
        setFormData({ ...formData, rating: "10" });
      }, 2000);
    }

    if (!formData.marketingResponse) {
      setTimeout(() => {
        setFormData({ ...formData, rating: "10", marketingResponse: true });
      }, 2000);
    }
  });

  /* 
	ğŸš¨ Not: YukarÄ±daki kodlarÄ±n hiÃ§biri challenge ile doÄŸrudan ilgili deÄŸildir. HiÃ§biri deÄŸiÅŸtirilmemelidir ve bakmanÄ±za bile gerek yok (yine de ilgileniyorsanÄ±z okuyabilirsiniz). 
*/

  /* Challenge

	Bu form yeterince sinir bozucu deÄŸil. Sizin gÃ¶reviniz aÅŸaÄŸÄ±dakileri yaparak onu daha sinir bozucu hale getirmek:
	
		1. Formun her elementi kontrol edilen bir element olmalÄ±dÄ±r. Her bir element aÅŸaÄŸÄ±daki 108. satÄ±rdaki formData state nesnesindeki ilgili Ã¶zellik tarafÄ±ndan kontrol edilmelidir. Elemanlar ve karÅŸÄ±lÄ±k gelen Ã¶zellikleri aÅŸaÄŸÄ±daki gibidir:


				+------+----------------+--------------+-------------------+-------------------+
				| Line | Element Type   | Value        | Name              | formData Property |
				+------+----------------+--------------+-------------------+-------------------+
				| 122  | text input     | n/a          | firstName         | firstName         |
				+------+----------------+--------------+-------------------+-------------------+
				| 129  | text input     | n/a          | lastName          | lastName          |
				+------+----------------+--------------+-------------------+-------------------+
				| 136  | email input    | n/a          | email             | email             |
				+------+----------------+--------------+-------------------+-------------------+
				| 149  | radio input    | "yes"        | privacyResponse   | privacyResponse   |
				+------+----------------+--------------+-------------------+-------------------+
				| 160  | radio input    | "no"         | privacyResponse   | privacyResponse   |
				+------+----------------+--------------+-------------------+-------------------+
				| 172  | radio input    | "absolutely" | privacyResponse   | privacyResponse   |
				+------+----------------+--------------+-------------------+-------------------+
				| 190  | select         | "n/a         | rating            | rating            |
				+------+----------------+--------------+-------------------+-------------------+
				| 204  | checkbox input | "n/a"        | marketingResponse | marketingResponse |
				+------+----------------+--------------+-------------------+-------------------+
				
		2. GerÃ§ek bilgilerinizi girmeye Ã§alÄ±ÅŸarak ve sorularÄ± insanlarÄ±n normalde yapacaÄŸÄ± ÅŸekilde yanÄ±tlayarak kodunuzu test edin. Ã–nceki gÃ¶revi doÄŸru bir ÅŸekilde tamamladÄ±ysanÄ±z, 73. satÄ±rÄ±n Ã¼zerindeki kod sayesinde tÃ¼m yanÄ±tlarÄ±nÄ±z mizahi bir ÅŸekilde engellenmelidir. 
	
	Ä°pucu: Formla etkileÅŸim halindeyken, formla ne *olmasÄ± gerektiÄŸini* (ve form kontrol edilseydi ne olacaÄŸÄ±nÄ±) anlamak istiyorsanÄ±z console.log(formData)
*/

  //Her bir form elamanini Controlled Components yapmak icin value Ã¶zelliÄŸini ve onChange olaylarini duzenleyelim.
  //

  const [formData, setFormData] = useState({
    firstName: "",
    lastName: "",
    email: "",
    privacyResponse: "yes",
    rating: "10",
    marketingResponse: true,
    wantsToSubmit: false
  });

  return (
    <form onSubmit={fakeSubmit}>
      <h1>DÃ¼nyanÄ±n En Sinir Bozucu Formu</h1>

      <input
        type="text"
        placeholder="AdÄ±"
        onChange={handleChange}
        name="firstName"
        value={formData.firstName} // KontrollÃ¼ hale getirildi
      />

      <input
        type="text"
        placeholder="SoyadÄ±"
        onChange={handleChange}
        name="lastName"
        value={formData.lastName} // KontrollÃ¼ hale getirildi
      />

      <input
        type="email"
        placeholder="Email"
        onChange={handleChange}
        name="email"
        value={formData.email} // KontrollÃ¼ hale getirildi
      />

      <fieldset>
        <legend>
          Gizlilikle ilgili tÃ¼m haklarÄ±nÄ±zdan feragat etmek ister misiniz?
        </legend>
        <div className="privacy-container">
          <label>
            <input
              type="radio"
              id="yes"
              name="privacyResponse"
              value="yes"
              onChange={handleChange}
              checked={formData.privacyResponse === "yes"} // KontrollÃ¼ hale getirildi
            />
            Evet
          </label>

          <label>
            <input
              type="radio"
              id="no"
              name="privacyResponse"
              value="no"
              onChange={handleChange}
              checked={formData.privacyResponse === "no"} // KontrollÃ¼ hale getirildi
            />
            HayÄ±r
          </label>

          <label>
            <input
              type="radio"
              id="absolutely"
              name="privacyResponse"
              value="absolutely"
              onChange={handleChange}
              checked={formData.privacyResponse === "absolutely"} // KontrollÃ¼ hale getirildi
            />
            Kesinlikle
          </label>
        </div>
      </fieldset>

      <fieldset className="rating-container">
        <legend>
          Bu formu 1-10 arasÄ±nda, 1 en kÃ¶tÃ¼ ve 10 en iyi olmak Ã¼zere nasÄ±l
          deÄŸerlendirirsiniz?
        </legend>

        <select
          onChange={handleChange}
          name="rating"
          value={formData.rating} // KontrollÃ¼ hale getirildi
        >
          <option value="1">1</option>
          <option value="2">2</option>
          <option value="3">3</option>
          <option value="4">4</option>
          <option value="5">5</option>
          <option value="6">6</option>
          <option value="7">7</option>
          <option value="8">8</option>
          <option value="9">9</option>
          <option value="10">10</option>
        </select>
      </fieldset>

      <label className="marketing-label">
        <input
          type="checkbox"
          name="marketingResponse"
          onChange={handleChange}
          checked={formData.marketingResponse} // KontrollÃ¼ hale getirildi
        />

        <div className="checkmark"></div>
        <span>GÃ¼nde 20 pazarlama maili almak istiyorum. </span>
      </label>

      <button
        className={formData.wantsToSubmit ? "move" : ""}
        onFocus={fakeSubmit}
        onMouseEnter={fakeSubmit}
      >
        GÃ¶nder
      </button>
    </form>
  );
}

//input, select, ve textarea elemanlarÄ±nda value Ã¶zelliÄŸi, formData iÃ§indeki karÅŸÄ±lÄ±k gelen deÄŸerle eÅŸleÅŸtirildi.
//Her elemanÄ±n onChange olayÄ±na handleChange fonksiyonunu ekledim
//checkbox ve radio elemanlarÄ± iÃ§in, checked Ã¶zelliÄŸi de kontrol edilmiÅŸ hale getirildi. checked Ã¶zelliÄŸi, bu elemanlarÄ±n iÅŸaretli olup olmadÄ±ÄŸÄ±nÄ± kontrol eder.
